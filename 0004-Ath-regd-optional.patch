--- a/drivers/net/wireless/ath/Kconfig
+++ b/drivers/net/wireless/ath/Kconfig
@@ -21,6 +21,16 @@
 	  http://wireless.kernel.org/en/users/Drivers/Atheros
 
 if WLAN_VENDOR_ATH
+
+config ATH_USER_REGD
+	bool "Force Atheros drivers to respect the user's regdomain settings"
+	---help---
+	  Atheros' idea of regulatory handling is that the EEPROM of the card defines
+	  the regulatory limits and the user is only allowed to restrict the settings
+	  even further, even if the country allows frequencies or power levels that
+
+	  Select this option if you want the driver to respect the user's decision about
+	  regulatory settings.
 
 config ATH_DEBUG
 	bool "Atheros wireless debugging"
--- a/drivers/net/wireless/ath/regd.c
+++ b/drivers/net/wireless/ath/regd.c
@@ -341,6 +341,10 @@
 	struct ieee80211_channel *ch;
 	unsigned int i;
 
+#ifdef ATH_USER_REGD
+	return;
+#endif
+
 	for (band = 0; band < NUM_NL80211_BANDS; band++) {
 		if (!wiphy->bands[band])
 			continue;
@@ -374,6 +378,10 @@
 {
 	struct ieee80211_supported_band *sband;
 
+#ifdef ATH_USER_REGD
+	return;
+#endif
+
 	sband = wiphy->bands[NL80211_BAND_2GHZ];
 	if (!sband)
 		return;
@@ -401,6 +409,10 @@
 	struct ieee80211_supported_band *sband;
 	struct ieee80211_channel *ch;
 	unsigned int i;
+
+#ifdef ATH_USER_REGD
+	return;
+#endif
 
 	if (!wiphy->bands[NL80211_BAND_5GHZ])
 		return;
@@ -631,6 +643,10 @@
 					 struct regulatory_request *request))
 {
 	const struct ieee80211_regdomain *regd;
+
+#ifdef ATH_USER_REGD
+	return;
+#endif
 
 	wiphy->reg_notifier = reg_notifier;
 	wiphy->regulatory_flags |= REGULATORY_STRICT_REG |
