--- a/drivers/net/phy/Kconfig
+++ b/drivers/net/phy/Kconfig
@@ -56,9 +56,14 @@
 	  Currently supports the cis8204
 
 config VITESSE_PHY
-        tristate "Drivers for the Vitesse PHYs"
-        ---help---
-          Currently supports the vsc8244
+	tristate "Drivers for the Vitesse PHYs"
+	---help---
+	  Currently supports the vsc8244, vsc8601
+
+config VITESSE_PHY_8601_SKEW
+	bool "Enable skew timing to vsc8601"
+	---help---
+	  Apply clock timing adjustments for vsc8601
 
 config SMSC_PHY
 	tristate "Drivers for SMSC PHYs"
--- a/drivers/net/phy/vitesse.c
+++ b/drivers/net/phy/vitesse.c
@@ -31,6 +31,11 @@
 #define MII_VSC8244_EXTCON1_TX_SKEW	0x0800
 #define MII_VSC8244_EXTCON1_RX_SKEW	0x0200
 
+/* EXT_CON1 Register values for VSC8601 */
+#define MII_VSC8601_EXTCON1_INIT	0x0000
+#define MII_VSC8601_EXTCON1_SKEW	0x0100
+#define MII_VSC8601_EXTCON1_ACTIPHY	0x0020
+
 /* Vitesse Interrupt Mask Register */
 #define MII_VSC8244_IMASK		0x19
 #define MII_VSC8244_IMASK_IEN		0x8000
@@ -62,6 +67,7 @@
 /* Vitesse Extended Page Access Register */
 #define MII_VSC82X4_EXT_PAGE_ACCESS	0x1f
 
+#define PHY_ID_VSC8601			0x00070420
 #define PHY_ID_VSC8234			0x000fc620
 #define PHY_ID_VSC8244			0x000fc6c0
 #define PHY_ID_VSC8514			0x00070670
@@ -164,6 +170,31 @@
 	 */
 }
 
+static int vsc8601_config_init(struct phy_device *phydev)
+{
+	int err;
+	int extcon;
+
+	err = phy_write(phydev, MII_VSC8244_AUX_CONSTAT,
+					MII_VSC8244_AUXCONSTAT_INIT);
+
+	if (err < 0)
+		return err;
+
+#ifdef CONFIG_VITESSE_PHY_8601_SKEW
+	extcon = phy_read(phydev, MII_VSC8244_EXT_CON1);
+	if (err < 0)
+		return err;
+
+	extcon |= MII_VSC8601_EXTCON1_SKEW;
+
+	err = phy_write(phydev, MII_VSC8244_EXT_CON1, extcon);
+#endif
+
+	return err;
+}
+
+
 /* vsc82x4_config_autocross_enable - Enable auto MDI/MDI-X for forced links
  * @phydev: target phy_device struct
  *
@@ -224,6 +255,19 @@
 /* Vitesse 82xx */
 static struct phy_driver vsc82xx_driver[] = {
 {
+	/* Vitesse 8601 */
+	.phy_id         = PHY_ID_VSC8601,
+	.name           = "Vitesse VSC8601",
+	.phy_id_mask    = 0x000ffff8,
+	.features       = PHY_GBIT_FEATURES,
+	.flags          = PHY_HAS_INTERRUPT,
+	.config_init    = &vsc8601_config_init,
+	.config_aneg    = &vsc82x4_config_aneg,
+	.read_status    = &genphy_read_status,
+	.ack_interrupt  = &vsc824x_ack_interrupt,
+	.config_intr    = &vsc82xx_config_intr,
+	.driver         = { .owner = THIS_MODULE,},
+}, {
 	.phy_id         = PHY_ID_VSC8234,
 	.name           = "Vitesse VSC8234",
 	.phy_id_mask    = 0x000ffff0,
@@ -326,6 +370,7 @@
 module_exit(vsc82xx_exit);
 
 static struct mdio_device_id __maybe_unused vitesse_tbl[] = {
+	{ PHY_ID_VSC8601, 0x000ffff8 },
 	{ PHY_ID_VSC8234, 0x000ffff0 },
 	{ PHY_ID_VSC8244, 0x000fffc0 },
 	{ PHY_ID_VSC8514, 0x000ffff0 },
